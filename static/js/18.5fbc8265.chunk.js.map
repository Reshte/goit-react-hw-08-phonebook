{"version":3,"file":"static/js/18.5fbc8265.chunk.js","mappings":"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","sources":["components/ContactList/ContactListItem/ContactListItem.styled.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/FilterForm/FilterForm.styled.jsx","components/FilterForm/FilterForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled'\n\n\nexport const Item = styled.li`\ndisplay:flex;\ngap:10px;\nalign-items: center;\njustify-content: space-between;\n`\nexport const Button = styled.button`\ndisplay: inline-block;\nheight: 20px;\ncursor:pointer;\nborder-radius: 5px;\nborder: solid 1px #777777; \ntransition: all .3s linear;\n\n&:hover {\n  background-color: #00bfff;\n  color:white;\n}`","import { Item } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from \"redux/operations\";\nimport { Button } from '@mui/material';\n\n\nexport const ContactListItem = ({ id, name, number }) => {\n     const dispatch = useDispatch()\n     const handleDelete = () => dispatch(deleteContact(id));\n     return (  \n<Item key={id}>\n               <p>{name} : {number}</p>\n<Button variant=\"contained\"  type='button' onClick={handleDelete} >Delete</Button>\n</Item>)  \n}","import styled from '@emotion/styled'\n\n\nexport const List = styled.ul`\ndisplay:flex;\ngap:5px;\nflex-direction:column;`\n\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import { ContactListItem } from './ContactListItem/ContactListItem'\nimport { List } from './ContactList.styled'\nimport { useSelector } from \"react-redux\";\nimport { selectContacts } from '../../redux/selectors'\nimport { selectFilter } from '../../redux/selectors'\n\nconst getVisibleContacts = (contacts, filter) => {\n    if (filter.length > 0) { return contacts.filter(({ name }) => name.toLowerCase().includes(filter)) }\n    return contacts;\n    };\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectContacts)\n    const filter = useSelector(selectFilter);    \n    const visibleContacts = getVisibleContacts(contacts, filter)\n  \n            return ( \n            <List>\n                   {visibleContacts.map(({ id, name, number }) => (\n                       <ContactListItem key={id} id={id} name={name} number={number}/>))}\n            </List> )\n}\n\n","import styled from '@emotion/styled'\n\nexport const Form = styled.form`\ndisplay:flex;\nflex-direction: column;\nalign-items: flex-start;\ngap:10px;\nborder: 1px solid black;\nborder-radius: 5px;\npadding: 20px;   \n`\n\nexport const Label = styled.label`\ndisplay:flex;\nflex-direction: column;\ngap:5px;`\n\nexport const Input = styled.input`\noutline-color:#00bfff;`\n\nexport const Button = styled.button`\nfont-size: 15px;\ndisplay:block;\nheight: 15px;\nflex-basis:20%;\ncursor:pointer;\nborder-radius: 5px;\npadding: 3px 5px; \nborder: solid 1px #777777; \ntransition: all .3s linear;\n\n&:hover {\n  background-color: #00bfff;\n  color:white;\n}\n `","import { Form} from './ContactForm.styled'\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { TextField, Button } from '@mui/material';\n\n\nexport function ContactForm () {\n  const [name, setName] =useState('')\n  const [number, setNumber] = useState('')\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n  \nconst handleSubmit = event => {\n  event.preventDefault();\n  const isNameInContacts = contacts.find(contact => contact.name.toLowerCase() ===  name.toLowerCase().trim() )\n  if (isNameInContacts) {\n    alert(`${name} is already in contacts`)\n  } else {\n    const contact = { name, number }\n    dispatch(addContact(contact))\n  }\n    reset();\n  };\n\n\nconst handelInputChange = (e) => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value)\n        break;\n      \n       case 'phone':\n        setNumber(e.currentTarget.value)\n        break;\n    \n      default:\n        console.log(\"Бедося у тебя с руками\")\n    }}\n         \n   const reset = () => {\n     setName('')\n     setNumber('')\n    }\n    \n  return (<Form onSubmit={handleSubmit}>\n       <TextField id=\"outlined-basic\" type=\"text\"  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              value={name}\n              onChange={handelInputChange}\n              required  name=\"name\" \n              label=\"Name\" variant=\"outlined\" margin=\"normal\" />\n          {/* <Label htmlFor=\"\" > Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              value={name}\n              onChange={handelInputChange}\n              required />\n          </Label>       */}\n    \n    <TextField id=\"outlined-basic\" type=\"tel\"  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              value={number}\n              onChange={handelInputChange}\n              required  name=\"phone\" \n              label=\"Phone number\" variant=\"outlined\" margin=\"normal\" />\n          {/* <Label htmlFor=\"\"> Phone number\n            <Input\n             type=\"tel\"\n              name=\"phone\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handelInputChange}\n                />\n          </Label> */}\n    <Button variant=\"contained\" type=\"submit\" >Add contact</Button>\n          {/* <Button type=\"submit\">Add contact</Button>        */}\n          </Form>)\n\n}\n\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n    display:flex;\n`\nexport const Label = styled.label`\n     display:flex;\n     flex-direction: column;\n     gap:10px;\n`\n\nexport const Input = styled.input`\n   \n`","import {  Wrapper } from './FilterForm.styled'\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice'\nimport { TextField } from '@mui/material'\n\n\nexport const FilterForm = () => {\n    const dispatch = useDispatch()\n    \n    const onChange = (e) => {\n                dispatch(setFilter(e.currentTarget.value.toLowerCase().trim()))\n           }\n       return (\n           <Wrapper>\n               <TextField id=\"outlined-basic\" type=\"text\" label=\"Find contacts name\" variant=\"outlined\" onChange={onChange} margin=\"normal\" sx={{ ml: '20px'}} />\n\n            {/* <Label htmlFor=\"\">Find contacts name\n                <Input type=\"text\"  onChange={onChange} />\n            </Label> */}\n        </Wrapper>\n    )\n}\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { FilterForm } from 'components/FilterForm/FilterForm';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Phonebook</title>\n      <ContactForm />\n      <title>Contacts</title>\n      <FilterForm />\n      {isLoading && <b>Request in progress...</b>}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Item","styled","ContactListItem","id","name","number","dispatch","useDispatch","variant","type","onClick","deleteContact","List","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","ContactList","visibleContacts","length","toLowerCase","includes","getVisibleContacts","useSelector","map","Form","ContactForm","useState","setName","setNumber","handelInputChange","e","currentTarget","value","console","log","reset","onSubmit","event","preventDefault","isNameInContacts","find","contact","trim","alert","addContact","TextField","pattern","title","onChange","required","label","margin","Wrapper","FilterForm","setFilter","sx","ml","Contacts","useEffect","fetchContacts"],"sourceRoot":""}